<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!-- 扫描controller包下所有标注@Controller的组件 -->
	<context:component-scan base-package="com.xll.dt.controller" />
	<context:component-scan base-package="com.xll.dt.exception" />

	<!-- mvc注解驱动 -->
	<mvc:annotation-driven>
		<!-- 替换springmvc的json处理器 --> 
		<!-- 配置fastjson(替换sprigmvc默认的json处理器) 需要放在注解配置里面 --> 
		<mvc:message-converters register-defaults="true">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteDateUseDateFormat</value>
						<value>PrettyFormat</value>
						<value>WriteMapNullValue</value>
						<value>WriteNullStringAsEmpty</value>
						<value>WriteNullListAsEmpty</value>
						<!-- <value>DisableCircularReferenceDetect</value> -->
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>



	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		   p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<!-- 静态资源 解析 另外一种解决静态资源的默认方式 -->
	<mvc:default-servlet-handler />
	
	<!-- <mvc:resources location="/script/" mapping="/script/**" /> <mvc:resources 
		location="/css/" mapping="/css/**" /> <mvc:resources location="/images/" 
		mapping="/images/**" /> -->
		
   <!-- 配置google的验证码 -->
   <bean name="producer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
      <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.textproducer.font.color">black</prop>
                        <prop key="kaptcha.textproducer.char.space">5</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
   </bean>
   
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
   
    <!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->  
    <!-- 配置以下两个bean即可实现此功能 -->  
    <!-- Enable Shiro Annotations for Spring-configured beans. Only run after the lifecycleBeanProcessor has run -->  
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean>  
   
   

</beans>